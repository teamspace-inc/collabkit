{
  "rules": {
    "mailbox": {
      "$appId": {
        "$endUserId": {
          "$mailId": {
            "from": {},
            "to": {},
            "subject": {},
            "text": {}
          }
        }
      }
    },
    // "rooms": {
    //   "$appId": {
    //     ".read": "auth.token.appId === $appId",
    //     "$workspaceId": {
    //       ".read": "auth.token.appId === $appId",
    //       ".write": "(auth.token.appId === $appId) && ((root.child('apps').child(auth.token.appId).child('mode').val() === 'UNSECURED' || (root.child('apps').child(auth.token.appId).child('mode').val() === 'SECURED' && $workspaceId === auth.token.workspaceId)))",
    //       "$roomId": {
    //         ".validate": "newData.hasChildren(['state'])",
    //        	"state": {
    //           ".validate": "newData.val() === 'open' || newData.val() === 'resolved'"
    //         },
    //         "createdById": {
    //           ".validate": "newData.isString() && root.child('profiles').child($appId).child(newData.val()).exists()"
    //         },
    //         "createdAt": {
    //           ".validate": "newData.isNumber()"
    //         }
    //       }
    //     }
    //   }
    // },

    "workspaces": {
      "$appId": {
        // "default": {
        //   ".read": "auth.token.appId === $appId"
        // },
        "$workspaceId": {
          ".read": "auth.token.appId === $appId",
          ".write": "(root.child('apps').child(auth.token.appId).child('mode').val() === 'UNSECURED' || (root.child('apps').child(auth.token.appId).child('mode').val() === 'SECURED' && $workspaceId === auth.token.workspaceId)) && !root.child('teams').child($appId).child($workspaceId).exists()",
          "name": {
            ".validate": "newData.isString()",
            ".write": "root.child('apps').child(auth.token.appId).child('mode').val() === 'UNSECURED' || (root.child('apps').child(auth.token.appId).child('mode').val() === 'SECURED' && $workspaceId === auth.token.workspaceId)"
          },
          "profiles": {
            "$endUserId": {
              ".validate": "newData.isBoolean()",
              ".write": "root.child('apps').child(auth.token.appId).child('mode').val() === 'UNSECURED' || (root.child('apps').child(auth.token.appId).child('mode').val() === 'SECURED' && $workspaceId === auth.token.workspaceId && $endUserId === auth.token.userId)"
            }
          }
        }
      }
    },
    "adminApps": {
      "$adminId": {
        ".read": "auth.uid === $adminId",
        "$appId": {
          ".read": true,
          ".write": false // only 'Firebase Admin' can write this
        }
      }
    },
    "apps": {
      "$appId": {
        ".write": "!root.child('apps').child($appId).exists()",
        ".read": "root.child('apps').child($appId).child('admins').child(auth.uid).exists()",
        "name": {
          ".read": "root.child('apps').child($appId).child('admins').child(auth.uid).exists()",
          ".write": "root.child('apps').child($appId).child('admins').child(auth.uid).exists()",
          ".validate": "newData.isString()"
        },
        "admins": {
          "$adminId": {
            ".read": "root.child('apps').child($appId).child('admins').child(auth.uid).exists()",
            ".validate": "newData.isBoolean()",
            ".write": false
          }
        },
        "keys": {
          "$key": {
            ".write": "root.child('apps').child($appId).child('admins').child(auth.uid).exists()",
            ".validate": "newData.isString()",
            ".read": "root.child('apps').child($appId).child('admins').child(auth.uid).exists()"
          }
        },
        "mode": {
          ".read": true,
          ".write": "root.child('apps').child($appId).child('admins').child(auth.uid).exists()",
          ".validate": "newData.isString() && (newData.val() === 'SECURED' || newData.val() === 'UNSECURED')"
        }
      }
    },
    "profiles": {
      "$appId": {
        ".read": "auth.token.appId === $appId",
        "$endUserId": {
          ".write": "(auth.token.appId === $appId) && (root.child('apps').child(auth.token.appId).child('mode').val() === 'UNSECURED' || (root.child('apps').child(auth.token.appId).child('mode').val() === 'SECURED' && $endUserId === auth.token.userId))",
          "name": {
            ".validate": "newData.isString()"
          },
          "email": {
            ".validate": "newData.isString()"
          },
          "avatar": {
            ".validate": "newData.isString()"
          }
        }
      }
    },
    "isTyping": {
      "$appId": {
        "$workspaceId": {
          "$threadId": {
            ".read": "auth.token.appId === $appId",
            "$endUserId": {
              ".write": "(auth.token.appId === $appId) && ((root.child('apps').child(auth.token.appId).child('mode').val() === 'UNSECURED' || (root.child('apps').child(auth.token.appId).child('mode').val() === 'SECURED' && $workspaceId === auth.token.workspaceId && newData.child('createdById').val() === auth.token.userId)))",
              ".validate": "newData.isBoolean()"
            }
          }
        }
      }
    },
    "presence": {
      "$appId": {
        "$workspaceId": {
          ".read": "auth.token.appId === $appId",
          "$endUserId": {
            ".write": "(auth.token.appId === $appId) && ((root.child('apps').child(auth.token.appId).child('mode').val() === 'UNSECURED' || (root.child('apps').child(auth.token.appId).child('mode').val() === 'SECURED' && $workspaceId === auth.token.workspaceId && newData.child('createdById').val() === auth.token.userId)))",
            ".validate": "newData.hasChildren(['url', 'timestamp'])"
          }
        }
      }
    },
    "views": {
      "inbox": {
        "$appId": {
          "$workspaceId": {
            ".read": "auth.token.appId === $appId",
            "$threadId": {
              ".write": "newData.hasChildren(['type', 'body', 'createdById', 'createdAt']) && (auth.token.appId === $appId) && ((root.child('apps').child(auth.token.appId).child('mode').val() === 'UNSECURED' || (root.child('apps').child(auth.token.appId).child('mode').val() === 'SECURED' && $workspaceId === auth.token.workspaceId && newData.child('createdById').val() === auth.token.userId)))",
              "type": {
                ".validate": "newData.isString() && (newData.val() === 'message' || newData.val() ==='reaction' || newData.val() === 'adminMessage' || newData.val() === 'system')"
              },
              "createdAt": {
                ".validate": "newData.isNumber()"
              },
              "body": {
                ".validate": "newData.isString()"
              }
            }
          }
        }
      }
    },
    "seen": {
      "$appId": {
        "$workspaceId": {
          ".read": "auth.token.appId === $appId",
          "$threadId": {
            ".read": "auth.token.appId === $appId",
            "$endUserId": {
              "seenUntilId": {
                ".validate": "newData.exists() && root.child('timeline').child($appId).child($workspaceId).child($threadId).child(newData.val()).exists()"
              }
            }
          }
        }
      }
    },
    "timeline": {
      "$appId": {
        "$workspaceId": {
          ".read": "auth.token.appId === $appId",
          ".indexOn": "createdAt",
          "$threadId": {
            ".read": "auth.token.appId === $appId",
            "$eventId": {
              ".write": "newData.hasChildren(['type', 'body', 'createdById', 'createdAt']) && (auth.token.appId === $appId) && ((root.child('apps').child(auth.token.appId).child('mode').val() === 'UNSECURED' || (root.child('apps').child(auth.token.appId).child('mode').val() === 'SECURED' && $workspaceId === auth.token.workspaceId && newData.child('createdById').val() === auth.token.userId))) && !root.child('timeline').child($appId).child($workspaceId).child($threadId).child($eventId).exists()",
              ".read": "auth.token.appId === $appId",
              "type": {
                ".validate": "newData.isString() && (newData.val() === 'message' || newData.val() ==='reaction' || newData.val() === 'adminMessage' || newData.val() === 'system')"
              },
              "body": {
                ".validate": "newData.isString()"
              },
              "createdById": {
                ".validate": "newData.isString() && root.child('profiles').child($appId).child(newData.val()).exists()"
              },
              "createdAt": {
                ".validate": "newData.isNumber()"
              },
              "parentId": {
                ".validate": "!newData.exists() || (newData.exists() && root.child('timeline').child($appId).child($workspaceId).child($threadId).child(newData.val()).exists())"
              },
              "system": {
                ".validate": "newData.val() === 'resolve' || newData.val() === 'reopen'"
              }
            }
          }
        }
      }
    }
  }
}
